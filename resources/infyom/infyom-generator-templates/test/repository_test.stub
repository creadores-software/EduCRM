<?php namespace $NAMESPACE_REPOSITORIES_TESTS$;

use $NAMESPACE_MODEL$\$MODEL_NAME$;
use $NAMESPACE_REPOSITORY$\$MODEL_NAME$Repository;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use $NAMESPACE_TESTS$\TestCase;

class $MODEL_NAME$RepositoryTest extends TestCase
{
    use DatabaseTransactions;

    /**
     * @var $MODEL_NAME$Repository
     */
    protected $$MODEL_NAME_CAMEL$Repo;

    public function setUp() : void
    {
        parent::setUp();
        $this->$MODEL_NAME_CAMEL$Repo = \App::make($MODEL_NAME$Repository::class);
    }

    /**
     * @test crear
     */
    public function test_crear_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = factory($MODEL_NAME$::class)->make()->toArray();

        $created$MODEL_NAME$ = $this->$MODEL_NAME_CAMEL$Repo->create($$MODEL_NAME_CAMEL$);

        $created$MODEL_NAME$ = $created$MODEL_NAME$->toArray();
        $this->assertArrayHasKey('id', $created$MODEL_NAME$);
        $this->assertNotNull($created$MODEL_NAME$['id'], 'El modelo $MODEL_NAME$ creado debe tener un id especificado');
        $this->assertNotNull($MODEL_NAME$::find($created$MODEL_NAME$['id']), 'El modelo $MODEL_NAME$ con el id dado debe exitar en la BD');
        $this->assertModelData($$MODEL_NAME_CAMEL$, $created$MODEL_NAME$);
    }

    /**
     * @test consultar
     */
    public function test_consultar_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = factory($MODEL_NAME$::class)->create();

        $db$MODEL_NAME$ = $this->$MODEL_NAME_CAMEL$Repo->find($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$);

        $db$MODEL_NAME$ = $db$MODEL_NAME$->toArray();
        $this->assertModelData($$MODEL_NAME_CAMEL$->toArray(), $db$MODEL_NAME$);
    }

    /**
     * @test editar
     */
    public function test_editar_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = factory($MODEL_NAME$::class)->create();
        $fake$MODEL_NAME$ = factory($MODEL_NAME$::class)->make()->toArray();

        $updated$MODEL_NAME$ = $this->$MODEL_NAME_CAMEL$Repo->update($fake$MODEL_NAME$, $$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$);

        $this->assertModelData($fake$MODEL_NAME$, $updated$MODEL_NAME$->toArray());
        $db$MODEL_NAME$ = $this->$MODEL_NAME_CAMEL$Repo->find($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$);
        $this->assertModelData($fake$MODEL_NAME$, $db$MODEL_NAME$->toArray());
    }

    /**
     * @test eliminar
     */
    public function test_eliminar_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = factory($MODEL_NAME$::class)->create();

        $resp = $this->$MODEL_NAME_CAMEL$Repo->delete($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$);

        $this->assertTrue($resp);
        $this->assertNull($MODEL_NAME$::find($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$), 'El modelo $MODEL_NAME$ no debe existir en bd');
    }
}
